name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y make upx-ucl

    - name: Build
      run: make release

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux 386
      id: upload-linux-386
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-linux-386
          asset_name: vcom-linux-386
          asset_content_type: application/octet-stream

    - name: Upload Linux amd64
      id: upload-linux-amd64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-linux-amd64
          asset_name: vcom-linux-amd64
          asset_content_type: application/octet-stream

    - name: Upload Linux arm
      id: upload-linux-arm
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-linux-arm
          asset_name: vcom-linux-arm
          asset_content_type: application/octet-stream

    - name: Upload Linux arm64
      id: upload-linux-arm64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-linux-arm64
          asset_name: vcom-linux-arm64
          asset_content_type: application/octet-stream

    - name: Upload Windows 386
      id: upload-windows-386
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-windows-386.exe
          asset_name: vcom-windows-386.exe
          asset_content_type: application/octet-stream

    - name: Upload Windows arm64
      id: upload-windows-arm64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-windows-arm64.exe
          asset_name: vcom-windows-arm64.exe
          asset_content_type: application/octet-stream

    - name: Upload Darwin arm64
      id: upload-darwin-arm64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vcom-darwin-arm64
          asset_name: vcom-darwin-arm64
          asset_content_type: application/octet-stream
